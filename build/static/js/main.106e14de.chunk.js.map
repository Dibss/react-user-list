{"version":3,"sources":["components/UI/css/ErrorModal.module.css","components/UI/css/Button.module.css","components/UI/css/Card.module.css","components/Users/css/UserForm.module.css","components/Users/css/UserList.module.css","components/UI/Button.js","components/UI/Card.js","components/UI/ErrorModal.js","components/Users/UserForm.js","components/Users/UserList.js","App.js","index.js"],"names":["module","exports","Button","props","type","className","styles","button","onClick","children","Card","card","ErrorModal","Backdrop","backdrop","onConfirm","ModalOverlay","modal","header","title","content","actions","Fragment","ReactDOM","createPortal","document","getElementById","UserForm","nameInputRef","useRef","ageInputRef","useState","error","setError","message","input","onSubmit","event","preventDefault","enteredUsername","current","value","enteredAge","trim","length","newUser","id","Math","random","toString","username","age","console","log","onAddUser","htmlFor","ref","UserList","userList","list","ulContent","map","user","users","App","addNewUser","prevUsers","createRoot","render"],"mappings":"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","file":"static/js/main.106e14de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ErrorModal_backdrop__3OUyK\",\"modal\":\"ErrorModal_modal__3p-NY\",\"header\":\"ErrorModal_header__2STHu\",\"content\":\"ErrorModal_content__3g3gX\",\"actions\":\"ErrorModal_actions__2WJOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__m-ntH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__KFlFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"UserForm_input__1BL_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"UserList_users__2-DND\"};","import styles from \"./css/Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      type={props.type || \"button\"}\r\n      className={styles.button}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styles from \"./css/Card.module.css\"\r\n\r\nconst Card = (props) => {\r\n  return <div className={`${styles.card} ${props.className}`}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Card from \"./Card\";\r\nimport Button from \"./Button\";\r\nimport styles from \"./css/ErrorModal.module.css\";\r\n\r\nconst ErrorModal = (props) => {\r\n  const Backdrop = (props) => {\r\n    return <div className={styles.backdrop} onClick={props.onConfirm} />;\r\n  };\r\n\r\n  const ModalOverlay = (props) => {\r\n    return (\r\n      <Card className={styles.modal}>\r\n        <header className={styles.header}>\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className={styles.content}>\r\n          <p>{props.content}</p>\r\n        </div>\r\n        <footer className={styles.actions}>\r\n          <Button type=\"button\" onClick={props.onConfirm}>\r\n            Close\r\n          </Button>\r\n        </footer>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onConfirm={props.onConfirm} />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay title={props.title} content={props.content} onConfirm={props.onConfirm}/>,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { useState, useRef } from \"react\";\r\n\r\nimport Button from \"../UI/Button\";\r\nimport Card from \"../UI/Card\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport styles from \"./css/UserForm.module.css\";\r\n\r\nconst UserForm = (props) => {\r\n  const nameInputRef = useRef();\r\n  const ageInputRef = useRef();\r\n\r\n  // const [enteredUsername, setEnteredUsername] = useState(\"\");\r\n  // const [enteredAge, setEnteredAge] = useState(\"\");\r\n  const [error, setError] = useState();\r\n\r\n  // const usernameHandler = (event) => {\r\n  //   setEnteredUsername(event.target.value);\r\n  //   // console.log(event.target.value);\r\n  // };\r\n\r\n  // const ageHandler = (event) => {\r\n  //   setEnteredAge(event.target.value);\r\n  //   // console.log(event.target.value);\r\n  // };\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredUsername = nameInputRef.current.value;\r\n    const enteredAge = ageInputRef.current.value;\r\n\r\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\r\n      setError({\r\n        title: \"Invalid input\",\r\n        message: \"Please enter a valid name and age (non-empty values)\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (+enteredAge < 1) {\r\n      setError({\r\n        title: \"Invalid age\",\r\n        message: \"Please enter a valid age (> 0)\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      id: Math.random().toString(),\r\n      username: enteredUsername,\r\n      age: enteredAge,\r\n    };\r\n\r\n    console.log(\"newUSer:\", newUser);\r\n\r\n    props.onAddUser(newUser);\r\n\r\n    // setEnteredAge(\"\");\r\n    // setEnteredUsername(\"\");\r\n    nameInputRef.current.value = '';\r\n    ageInputRef.current.value = '';\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          content={error.message}\r\n          onConfirm={errorHandler}\r\n        />\r\n      )}\r\n      <Card className={styles.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <div>\r\n            <label htmlFor=\"\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              // onChange={usernameHandler}\r\n              // value={enteredUsername}\r\n              ref={nameInputRef}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"age\">Age (Years)</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"age\"\r\n              // onChange={ageHandler}\r\n              // value={enteredAge}\r\n              ref={ageInputRef}\r\n            />\r\n          </div>\r\n          <Button type=\"submit\">Add User</Button>\r\n        </form>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import Card from \"../UI/Card\";\r\nimport styles from \"./css/UserList.module.css\";\r\n\r\nconst UserList = (props) => {\r\n\r\n  const userList = props.list;\r\n\r\n  let ulContent = (\r\n    userList.map((user) => (\r\n      <li key={user.id}>\r\n        {user.username} ({user.age} years old)\r\n      </li>\r\n    ))\r\n  )\r\n\r\n  if(userList.length === 0){\r\n    ulContent = 'There are no registered users'\r\n  }\r\n\r\n  return (\r\n    <Card className={styles.users}>\r\n      <ul>\r\n        {ulContent}\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, {useState} from 'react';\n\nimport UserForm from './components/Users/UserForm';\nimport UserList from './components/Users/UserList';\n\nconst App = props => {\n\n  const [users, addNewUser] = useState([]);\n\n  const addUserHandler = newUser => {\n    // console.log('newUser on app.js:', newUser);\n    addNewUser((prevUsers) => [...prevUsers, newUser])\n  }\n\n  return (\n    <React.Fragment>\n      <UserForm onAddUser={addUserHandler}/>\n      <UserList list={users}/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}